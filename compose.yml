version: '3'

services:

  back-end:
    build:
      context: server
    container_name: back-end
    working_dir: /usr/src/app
    networks:
      - tbaza_network
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    ports:
      - "5000:5000"
    command: npm run dev
    depends_on:
       - db

  front-end:
    build:
      context: client
    container_name: front-end
    working_dir: /usr/src/app
    networks:
      - tbaza_network
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    ports:
      - "3000:3000"
    command: npm start

  db:
    build:
      context: mongo
    container_name: db
    restart: always
    tty: true
    ports:
      - "27017:27017"
    networks:
      - tbaza_network

  nginx:
    image: nginx:1.23.3
    container_name: nginx
    restart: always
    tty: true
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/cert.pem:/etc/cert.pem
      - ./nginx/key.pem:/etc/key.pem
    ports:
      - "80:80"
      - "443:443"
    networks:
      - tbaza_network
    depends_on:
       - back-end
       - front-end

  certbot:
    ports:
      - "6000:80"
    env_file:
      - .env
    # и снова мониторуем директорию nginx
    volumes:
      - ./nginx/:/etc/nginx/
    build:
      context: ./certbot
      dockerfile: Dockerfile
      # задаем переменные среды
      args:
        DOMAIN_EMAIL: ${DOMAIN_EMAIL}
        DOMAIN_URL: ${DOMAIN_URL}

networks:
  tbaza_network:
    driver: bridge
